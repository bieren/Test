

2017年4月4日 23:03:00
======================================================================
注解
@Override  方法的重写


======================================================================
关键词
package     /*
		     *1、提供多层的命名空间，解决命名冲突；（处于不同package中的类可以拥有相同的名字）
		     2、对类按功能进行分类，使得项目的组织更加清楚当开发一个类非常多的项目的时候，如果不使用package对类进行分类，而是把所有的类都放在一个package下，代码的可读性比较差，维护性也比较差
		     */

import   //导入  可分为 单类型导入  和 按需要类型导入

public   //表示这是对所有用户开放的，所有用户都可以直接进行调用

return   //函数有返回值的的时候，你要给他一个出口，这个出口就是return

class    // 类
static   //静态的
void     //无返回类型
new   //对象实例化
int   //整数
if    //判断
else  //通常搭配在if语句 代码体后  用作if语句的反例
======================================================================
类
String  //引用类型   以字符串的形式保存在内存里
Scanner  //java.util.Scanner类




======================================================================
//重写Object.class内的toString方法（重写（重新定义）后的toString返回的内容作为所在类的默认String类型内容）
//涉及到类的继承与方法的重写
//这个方法表明了任何类都可以表达成某种相应的字符串
@Override
public String toString() {
	// TODO Auto-generated method stub
	return "我是a.Llm01";
}
======================================================================
//条件判断语句
if("*".equals(m)){
	System.out.println(a*b);
}

======================================================================

if("*".equals(m)){
	System.out.println(a*b);
}else if("%".equals(m)){
	System.out.println(a%b);
}else{

}

======================================================================

System.out.println("吔屎啦你。");//打印语句








